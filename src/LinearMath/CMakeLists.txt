
add_library(LinearMath)
target_include_directories(LinearMath PUBLIC
	${BULLET_PHYSICS_SOURCE_DIR}/src
)

SET(LinearMath_SRCS
${CMAKE_CURRENT_SOURCE_DIR}/btAlignedAllocator.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btConvexHull.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btConvexHullComputer.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btGeometryUtil.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btPolarDecomposition.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btQuickprof.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btSerializer.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btSerializer64.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btThreads.cpp
${CMAKE_CURRENT_SOURCE_DIR}/btVector3.cpp
${CMAKE_CURRENT_SOURCE_DIR}/TaskScheduler/btTaskScheduler.cpp
${CMAKE_CURRENT_SOURCE_DIR}/TaskScheduler/btThreadSupportPosix.cpp
${CMAKE_CURRENT_SOURCE_DIR}/TaskScheduler/btThreadSupportWin32.cpp
)

SET(LinearMath_HDRS
${CMAKE_CURRENT_SOURCE_DIR}/btAabbUtil2.h
${CMAKE_CURRENT_SOURCE_DIR}/btAlignedAllocator.h
${CMAKE_CURRENT_SOURCE_DIR}/btAlignedObjectArray.h
${CMAKE_CURRENT_SOURCE_DIR}/btConvexHull.h
${CMAKE_CURRENT_SOURCE_DIR}/btConvexHullComputer.h
${CMAKE_CURRENT_SOURCE_DIR}/btDefaultMotionState.h
${CMAKE_CURRENT_SOURCE_DIR}/btGeometryUtil.h
${CMAKE_CURRENT_SOURCE_DIR}/btGrahamScan2dConvexHull.h
${CMAKE_CURRENT_SOURCE_DIR}/btHashMap.h
${CMAKE_CURRENT_SOURCE_DIR}/btIDebugDraw.h
${CMAKE_CURRENT_SOURCE_DIR}/btList.h
${CMAKE_CURRENT_SOURCE_DIR}/btMatrix3x3.h
${CMAKE_CURRENT_SOURCE_DIR}/btMinMax.h
${CMAKE_CURRENT_SOURCE_DIR}/btMotionState.h
${CMAKE_CURRENT_SOURCE_DIR}/btPolarDecomposition.h
${CMAKE_CURRENT_SOURCE_DIR}/btPoolAllocator.h
${CMAKE_CURRENT_SOURCE_DIR}/btQuadWord.h
${CMAKE_CURRENT_SOURCE_DIR}/btQuaternion.h
${CMAKE_CURRENT_SOURCE_DIR}/btQuickprof.h
${CMAKE_CURRENT_SOURCE_DIR}/btRandom.h
${CMAKE_CURRENT_SOURCE_DIR}/btScalar.h
${CMAKE_CURRENT_SOURCE_DIR}/btSerializer.h
${CMAKE_CURRENT_SOURCE_DIR}/btStackAlloc.h
${CMAKE_CURRENT_SOURCE_DIR}/btThreads.h
${CMAKE_CURRENT_SOURCE_DIR}/btTransform.h
${CMAKE_CURRENT_SOURCE_DIR}/btTransformUtil.h
${CMAKE_CURRENT_SOURCE_DIR}/btVector3.h
${CMAKE_CURRENT_SOURCE_DIR}/TaskScheduler/btThreadSupportInterface.h
)
target_sources(LinearMath PRIVATE ${LinearMath_SRCS} PUBLIC ${LinearMath_HDRS})

SET_TARGET_PROPERTIES(LinearMath PROPERTIES VERSION ${BULLET_VERSION})
SET_TARGET_PROPERTIES(LinearMath PROPERTIES SOVERSION ${BULLET_VERSION})

IF (INSTALL_LIBS)
	IF (NOT INTERNAL_CREATE_DISTRIBUTABLE_MSVC_PROJECTFILES)
		#FILES_MATCHING requires CMake 2.6
		IF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.5)
			IF (APPLE AND BUILD_SHARED_LIBS AND FRAMEWORK)
				INSTALL(TARGETS LinearMath DESTINATION .)
			ELSE (APPLE AND BUILD_SHARED_LIBS AND FRAMEWORK)
				INSTALL(TARGETS LinearMath
					RUNTIME DESTINATION bin
					LIBRARY DESTINATION lib${LIB_SUFFIX}
					ARCHIVE DESTINATION lib${LIB_SUFFIX})
				INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
DESTINATION ${INCLUDE_INSTALL_DIR} FILES_MATCHING PATTERN "*.h"  PATTERN
".svn" EXCLUDE PATTERN "CMakeFiles" EXCLUDE)
			ENDIF (APPLE AND BUILD_SHARED_LIBS AND FRAMEWORK)
		ENDIF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.5)

		IF (APPLE AND BUILD_SHARED_LIBS AND FRAMEWORK)
			SET_TARGET_PROPERTIES(LinearMath PROPERTIES FRAMEWORK true)
			SET_TARGET_PROPERTIES(LinearMath PROPERTIES PUBLIC_HEADER "${LinearMath_HDRS}")
		ENDIF (APPLE AND BUILD_SHARED_LIBS AND FRAMEWORK)
	ENDIF (NOT INTERNAL_CREATE_DISTRIBUTABLE_MSVC_PROJECTFILES)
ENDIF (INSTALL_LIBS)
